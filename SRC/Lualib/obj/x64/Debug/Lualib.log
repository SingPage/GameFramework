生成启动时间为 2020/4/27 13:09:51。
     1>项目“D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\Lualib.vcxproj”在节点 2 上(Build 个目标)。
     1>PrepareForBuild:
         正在创建目录“D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\bin\x64\Debug\”。
         正在创建目录“D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\obj\x64\Debug\Lualib.tlog\”。
       InitializeBuildStatus:
         正在创建“D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\obj\x64\Debug\Lualib.tlog\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
       _ValidateSources:
         Validating sources
       _CopySources:
         Copying sources remotely to '192.168.31.133'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lapi.c' to '/root/projects/Lualib/lapi.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lauxlib.c' to '/root/projects/Lualib/lauxlib.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lbaselib.c' to '/root/projects/Lualib/lbaselib.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lbitlib.c' to '/root/projects/Lualib/lbitlib.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lcode.c' to '/root/projects/Lualib/lcode.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lcorolib.c' to '/root/projects/Lualib/lcorolib.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lctype.c' to '/root/projects/Lualib/lctype.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\ldblib.c' to '/root/projects/Lualib/ldblib.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\ldebug.c' to '/root/projects/Lualib/ldebug.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\ldo.c' to '/root/projects/Lualib/ldo.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\ldump.c' to '/root/projects/Lualib/ldump.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lfunc.c' to '/root/projects/Lualib/lfunc.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lgc.c' to '/root/projects/Lualib/lgc.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\linit.c' to '/root/projects/Lualib/linit.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\liolib.c' to '/root/projects/Lualib/liolib.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\llex.c' to '/root/projects/Lualib/llex.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lmathlib.c' to '/root/projects/Lualib/lmathlib.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lmem.c' to '/root/projects/Lualib/lmem.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\loadlib.c' to '/root/projects/Lualib/loadlib.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lobject.c' to '/root/projects/Lualib/lobject.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lopcodes.c' to '/root/projects/Lualib/lopcodes.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\loslib.c' to '/root/projects/Lualib/loslib.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lparser.c' to '/root/projects/Lualib/lparser.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lstate.c' to '/root/projects/Lualib/lstate.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lstring.c' to '/root/projects/Lualib/lstring.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lstrlib.c' to '/root/projects/Lualib/lstrlib.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\ltable.c' to '/root/projects/Lualib/ltable.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\ltablib.c' to '/root/projects/Lualib/ltablib.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\ltm.c' to '/root/projects/Lualib/ltm.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lundump.c' to '/root/projects/Lualib/lundump.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lutf8lib.c' to '/root/projects/Lualib/lutf8lib.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lvm.c' to '/root/projects/Lualib/lvm.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lzio.c' to '/root/projects/Lualib/lzio.c'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lapi.h' to '/root/projects/Lualib/lapi.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lauxlib.h' to '/root/projects/Lualib/lauxlib.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lcode.h' to '/root/projects/Lualib/lcode.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lctype.h' to '/root/projects/Lualib/lctype.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\ldebug.h' to '/root/projects/Lualib/ldebug.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\ldo.h' to '/root/projects/Lualib/ldo.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lfunc.h' to '/root/projects/Lualib/lfunc.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lgc.h' to '/root/projects/Lualib/lgc.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\llex.h' to '/root/projects/Lualib/llex.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\llimits.h' to '/root/projects/Lualib/llimits.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lmem.h' to '/root/projects/Lualib/lmem.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lobject.h' to '/root/projects/Lualib/lobject.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lopcodes.h' to '/root/projects/Lualib/lopcodes.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lparser.h' to '/root/projects/Lualib/lparser.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lprefix.h' to '/root/projects/Lualib/lprefix.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lstate.h' to '/root/projects/Lualib/lstate.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lstring.h' to '/root/projects/Lualib/lstring.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\ltable.h' to '/root/projects/Lualib/ltable.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\ltm.h' to '/root/projects/Lualib/ltm.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lua.h' to '/root/projects/Lualib/lua.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lua.hpp' to '/root/projects/Lualib/lua.hpp'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\luaconf.h' to '/root/projects/Lualib/luaconf.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lualib.h' to '/root/projects/Lualib/lualib.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lundump.h' to '/root/projects/Lualib/lundump.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lvm.h' to '/root/projects/Lualib/lvm.h'
         Copying file 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\lzio.h' to '/root/projects/Lualib/lzio.h'
       _ValidateValidArchitecture:
         Validating architecture
         Current project architecture 'x64' is compatible with the remote system architecture 'x64' ('x64').
       ClCompile:
         Starting remote build
         Compiling sources:
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/lapi.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/lapi.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         lapi.c
         Done compiling '/root/projects/Lualib/lapi.c'
         Invoking 'g++'
         /root/projects/Lualib/lapi.c: 在函数‘lua_createtable’中:
         /root/projects/Lualib/lapi.c:691:5: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
              luaH_resize(L, t, narray, nrec);
              ^
         /root/projects/Lualib/lapi.c:691:5: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
         In file included from /root/projects/Lualib/lstate.h:12:0,
                          from /root/projects/Lualib/lapi.h:12,
                          from /root/projects/Lualib/lapi.c:18:
         /root/projects/Lualib/lapi.c: 在函数‘lua_setuservalue’中:
         /root/projects/Lualib/lobject.h:127:23: 警告：‘lu_byte’转换自‘int’时可能改变值 [-Wconversion]
          #define rttype(o) ((o)->tt_)
                                ^
         /root/projects/Lualib/lobject.h:373:40: 附注：in expansion of macro ‘rttype’
             iu->user_ = io->value_; iu->ttuv_ = rttype(io); \
                                                 ^
         /root/projects/Lualib/lapi.c:892:3: 附注：in expansion of macro ‘setuservalue’
            setuservalue(L, uvalue(o), L->top - 1);
            ^
         In file included from /root/projects/Lualib/lapi.h:12:0,
                          from /root/projects/Lualib/lapi.c:18:
         /root/projects/Lualib/lapi.c: 在函数‘lua_pcallk’中:
         /root/projects/Lualib/lstate.h:130:49: 警告：‘short unsigned int’转换自‘int’时可能改变值 [-Wconversion]
          #define setoah(st,v) ((st) = ((st) & ~CIST_OAH) | (v))
                                                          ^
         /root/projects/Lualib/lapi.c:979:5: 附注：in expansion of macro ‘setoah’
              setoah(ci->callstatus, L->allowhook);  /* save value of 'allowhook' */
              ^
         /root/projects/Lualib/lapi.c:982:20: 警告：‘short unsigned int’转换自‘int’时可能改变值 [-Wconversion]
              ci->callstatus &= ~CIST_YPCALL;
                             ^
         
         g++ -c -x c /root/projects/Lualib/lauxlib.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/lauxlib.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         lauxlib.c
         Done compiling '/root/projects/Lualib/lauxlib.c'
         Invoking 'g++'
         /root/projects/Lualib/lauxlib.c: 在函数‘getF’中:
         /root/projects/Lualib/lauxlib.c:646:15: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
              *size = lf->n;  /* return them (chars already in buffer) */
                        ^
         /root/projects/Lualib/lauxlib.c: 在函数‘skipBOM’中:
         /root/projects/Lualib/lauxlib.c:676:5: 警告：‘char’转换自‘int’时可能改变值 [-Wconversion]
              lf->buff[lf->n++] = c;  /* to be read by the parser */
              ^
         /root/projects/Lualib/lauxlib.c: 在函数‘luaL_loadfilex’中:
         /root/projects/Lualib/lauxlib.c:726:5: 警告：‘char’转换自‘int’时可能改变值 [-Wconversion]
              lf.buff[lf.n++] = c;  /* 'c' is the first character of the stream */
              ^
         /root/projects/Lualib/lauxlib.c: 在函数‘luaL_gsub’中:
         /root/projects/Lualib/lauxlib.c:998:33: 警告：‘size_t’转换自‘long int’时可能会改变结果的符号 [-Wsign-conversion]
              luaL_addlstring(&b, s, wild - s);  /* push prefix */
                                          ^
         
         g++ -c -x c /root/projects/Lualib/lbaselib.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/lbaselib.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         lbaselib.c
         Done compiling '/root/projects/Lualib/lbaselib.c'
         Invoking 'g++'
         /root/projects/Lualib/lbaselib.c: 在函数‘b_str2int’中:
         /root/projects/Lualib/lbaselib.c:60:5: 警告：‘lua_Unsigned’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
              n = n * base + digit;
              ^
         /root/projects/Lualib/lbaselib.c:60:5: 警告：‘lua_Unsigned’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
         /root/projects/Lualib/lbaselib.c: 在函数‘luaB_rawlen’中:
         /root/projects/Lualib/lbaselib.c:150:32: 警告：‘lua_Integer’转换自‘size_t’时可能会改变结果的符号 [-Wsign-conversion]
            lua_pushinteger(L, lua_rawlen(L, 1));
                                         ^
         
         g++ -c -x c /root/projects/Lualib/lbitlib.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/lbitlib.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         lbitlib.c
         Done compiling '/root/projects/Lualib/lbitlib.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/lcode.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/lcode.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         lcode.c
         Done compiling '/root/projects/Lualib/lcode.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/lcorolib.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/lcorolib.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         lcorolib.c
         Done compiling '/root/projects/Lualib/lcorolib.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/lctype.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/lctype.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         lctype.c
         Done compiling '/root/projects/Lualib/lctype.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/ldblib.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/ldblib.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         ldblib.c
         Done compiling '/root/projects/Lualib/ldblib.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/ldebug.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/ldebug.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         ldebug.c
         Done compiling '/root/projects/Lualib/ldebug.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/ldo.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/ldo.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         ldo.c
         Done compiling '/root/projects/Lualib/ldo.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/ldump.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/ldump.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         ldump.c
         Done compiling '/root/projects/Lualib/ldump.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/lfunc.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/lfunc.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         lfunc.c
         Done compiling '/root/projects/Lualib/lfunc.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/lgc.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/lgc.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         lgc.c
         Done compiling '/root/projects/Lualib/lgc.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/linit.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/linit.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         linit.c
         Done compiling '/root/projects/Lualib/linit.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/liolib.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/liolib.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         liolib.c
         Done compiling '/root/projects/Lualib/liolib.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/llex.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/llex.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         llex.c
         Done compiling '/root/projects/Lualib/llex.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/lmathlib.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/lmathlib.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         lmathlib.c
         Done compiling '/root/projects/Lualib/lmathlib.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/lmem.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/lmem.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         lmem.c
         Done compiling '/root/projects/Lualib/lmem.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/loadlib.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/loadlib.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         loadlib.c
         Done compiling '/root/projects/Lualib/loadlib.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/lobject.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/lobject.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         lobject.c
         Done compiling '/root/projects/Lualib/lobject.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/lopcodes.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/lopcodes.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         lopcodes.c
         Done compiling '/root/projects/Lualib/lopcodes.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/loslib.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/loslib.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         loslib.c
         Done compiling '/root/projects/Lualib/loslib.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/lparser.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/lparser.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         lparser.c
         Done compiling '/root/projects/Lualib/lparser.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/lstate.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/lstate.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         lstate.c
         Done compiling '/root/projects/Lualib/lstate.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/lstring.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/lstring.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         lstring.c
         Done compiling '/root/projects/Lualib/lstring.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/lstrlib.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/lstrlib.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         lstrlib.c
         Done compiling '/root/projects/Lualib/lstrlib.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/ltable.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/ltable.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         ltable.c
         Done compiling '/root/projects/Lualib/ltable.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/ltablib.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/ltablib.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         ltablib.c
         Done compiling '/root/projects/Lualib/ltablib.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/ltm.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/ltm.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         ltm.c
         Done compiling '/root/projects/Lualib/ltm.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/lundump.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/lundump.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         lundump.c
         Done compiling '/root/projects/Lualib/lundump.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/lutf8lib.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/lutf8lib.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         lutf8lib.c
         Done compiling '/root/projects/Lualib/lutf8lib.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/lvm.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/lvm.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         lvm.c
         Done compiling '/root/projects/Lualib/lvm.c'
         Invoking 'g++'
         g++ -c -x c /root/projects/Lualib/lzio.c -g2 -gdwarf-2 -o "/root/projects/Lualib/obj/x64/Debug/lzio.o" -Wall -Wswitch -W"no-deprecated-declarations" -W"empty-body" -Wconversion -W"return-type" -Wparentheses -W"no-pointer-sign" -W"no-format" -Wuninitialized -W"unreachable-code" -W"unused-function" -W"unused-value" -W"unused-variable" -O0 -fno-strict-aliasing -fno-omit-frame-pointer -fexceptions -std=c11
         lzio.c
         Done compiling '/root/projects/Lualib/lzio.c'
         /root/projects/Lualib/lcode.c: 在函数‘luaK_codek’中:
         /root/projects/Lualib/lcode.c:348:5: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
              return luaK_codeABx(fs, OP_LOADK, reg, k);
              ^
         /root/projects/Lualib/lcode.c: 在函数‘luaK_reserveregs’中:
         /root/projects/Lualib/lcode.c:377:15: 警告：‘lu_byte’转换自‘int’时可能改变值 [-Wconversion]
            fs->freereg += n;
                        ^
         /root/projects/Lualib/lcode.c: 在函数‘luaK_indexed’中:
         /root/projects/Lualib/lcode.c:948:20: 警告：‘lu_byte’转换自‘int’时可能改变值 [-Wconversion]
            t->u.ind.t = t->u.info;  /* register or upvalue index */
                             ^
         /root/projects/Lualib/lcode.c:949:29: 警告：‘short int’转换自‘int’时可能改变值 [-Wconversion]
            t->u.ind.idx = luaK_exp2RK(fs, k);  /* R/K index for key */
                                      ^
         /root/projects/Lualib/lcode.c: 在函数‘luaK_prefix’中:
         /root/projects/Lualib/lcode.c:1070:31: 警告：‘int’转换自‘unsigned int’时可能会改变结果的符号 [-Wsign-conversion]
                if (constfolding(fs, op + LUA_OPUNM, e, &ef))
                                        ^
         /root/projects/Lualib/lcode.c: 在函数‘luaK_posfix’中:
         /root/projects/Lualib/lcode.c:1160:32: 警告：‘int’转换自‘unsigned int’时可能会改变结果的符号 [-Wsign-conversion]
                if (!constfolding(fs, op + LUA_OPADD, e1, e2))
                                         ^
         /root/projects/Lualib/lcode.c: 在函数‘luaK_setlist’中:
         /root/projects/Lualib/lcode.c:1201:22: 警告：‘lu_byte’转换自‘int’时可能改变值 [-Wconversion]
            fs->freereg = base + 1;  /* free registers with list values */
                               ^
         /root/projects/Lualib/ldebug.c: 在函数‘auxgetinfo’中:
         /root/projects/Lualib/ldebug.c:282:32: 警告：‘char’转换自‘lu_byte’时可能会改变结果的符号 [-Wsign-conversion]
                    ar->isvararg = f->l.p->is_vararg;
                                         ^
         /root/projects/Lualib/ldebug.c: 在函数‘luaG_traceexec’中:
         /root/projects/Lualib/ldebug.c:668:19: 警告：‘lu_byte’转换自‘sig_atomic_t’时可能改变值 [-Wconversion]
            lu_byte mask = L->hookmask;
                            ^
         /root/projects/Lualib/ldebug.c:675:20: 警告：‘short unsigned int’转换自‘int’时可能改变值 [-Wconversion]
              ci->callstatus &= ~CIST_HOOKYIELD;  /* erase mark */
                             ^
         In file included from /root/projects/Lualib/lapi.h:11:0,
                          from /root/projects/Lualib/ldo.c:19:
         /root/projects/Lualib/ldo.c: 在函数‘luaD_reallocstack’中:
         /root/projects/Lualib/ldo.c:182:36: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_reallocvector(L, L->stack, L->stacksize, newsize, TValue);
                                             ^
         /root/projects/Lualib/llimits.h:111:27: 附注：in definition of macro ‘cast’
          #define cast(t, exp) ((t)(exp))
                                    ^
         /root/projects/Lualib/lmem.h:57:19: 附注：in expansion of macro ‘luaM_reallocv’
             ((v)=cast(t *, luaM_reallocv(L, v, oldn, n, sizeof(t))))
                            ^
         /root/projects/Lualib/ldo.c:182:3: 附注：in expansion of macro ‘luaM_reallocvector’
            luaM_reallocvector(L, L->stack, L->stacksize, newsize, TValue);
            ^
         /root/projects/Lualib/ldo.c:182:3: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
         /root/projects/Lualib/ldo.c: 在函数‘luaD_hook’中:
         /root/projects/Lualib/ldo.c:275:20: 警告：‘short unsigned int’转换自‘int’时可能改变值 [-Wconversion]
              ci->callstatus &= ~CIST_HOOKED;
                             ^
         /root/projects/Lualib/ldo.c: 在函数‘luaD_precall’中:
         /root/projects/Lualib/ldo.c:426:7: 警告：‘short int’转换自‘int’时可能改变值 [-Wconversion]
                ci->nresults = nresults;
                ^
         /root/projects/Lualib/ldo.c:454:7: 警告：‘short int’转换自‘int’时可能改变值 [-Wconversion]
                ci->nresults = nresults;
                ^
         /root/projects/Lualib/ldo.c: 在函数‘finishCcall’中:
         /root/projects/Lualib/ldo.c:526:20: 警告：‘short unsigned int’转换自‘int’时可能改变值 [-Wconversion]
              ci->callstatus &= ~CIST_YPCALL;  /* continuation is also inside it */
                             ^
         /root/projects/Lualib/ldo.c: 在函数‘lua_resume’中:
         /root/projects/Lualib/ldo.c:658:39: 警告：‘short unsigned int’转换自‘int’时可能改变值 [-Wconversion]
            L->nCcalls = (from) ? from->nCcalls + 1 : 1;
                                                ^
         In file included from /root/projects/Lualib/lzio.h:13:0,
                          from /root/projects/Lualib/lstate.h:14,
                          from /root/projects/Lualib/lapi.h:12,
                          from /root/projects/Lualib/ldo.c:19:
         /root/projects/Lualib/ldo.c: 在函数‘luaD_protectedparser’中:
         /root/projects/Lualib/ldo.c:795:51: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_freearray(L, p.dyd.actvar.arr, p.dyd.actvar.size);
                                                            ^
         /root/projects/Lualib/lmem.h:43:58: 附注：in definition of macro ‘luaM_freearray’
          #define luaM_freearray(L, b, n)   luaM_realloc_(L, (b), (n)*sizeof(*(b)), 0)
                                                                   ^
         /root/projects/Lualib/ldo.c:796:43: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_freearray(L, p.dyd.gt.arr, p.dyd.gt.size);
                                                    ^
         /root/projects/Lualib/lmem.h:43:58: 附注：in definition of macro ‘luaM_freearray’
          #define luaM_freearray(L, b, n)   luaM_realloc_(L, (b), (n)*sizeof(*(b)), 0)
                                                                   ^
         /root/projects/Lualib/ldo.c:797:49: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_freearray(L, p.dyd.label.arr, p.dyd.label.size);
                                                          ^
         /root/projects/Lualib/lmem.h:43:58: 附注：in definition of macro ‘luaM_freearray’
          #define luaM_freearray(L, b, n)   luaM_realloc_(L, (b), (n)*sizeof(*(b)), 0)
                                                                   ^
         /root/projects/Lualib/ldump.c: 在函数‘DumpCode’中:
         /root/projects/Lualib/ldump.c:92:24: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            DumpVector(f->code, f->sizecode, D);
                                 ^
         /root/projects/Lualib/ldump.c:35:40: 附注：in definition of macro ‘DumpVector’
          #define DumpVector(v,n,D) DumpBlock(v,(n)*sizeof((v)[0]),D)
                                                 ^
         /root/projects/Lualib/ldump.c: 在函数‘DumpDebug’中:
         /root/projects/Lualib/ldump.c:151:3: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            DumpVector(f->lineinfo, n, D);
            ^
         In file included from /root/projects/Lualib/lobject.h:15:0,
                          from /root/projects/Lualib/lfunc.h:11,
                          from /root/projects/Lualib/lfunc.c:17:
         /root/projects/Lualib/lfunc.c: 在函数‘luaF_newCclosure’中:
         /root/projects/Lualib/lfunc.h:15:55: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                                   cast(int, sizeof(TValue)*((n)-1)))
                                                                ^
         /root/projects/Lualib/llimits.h:111:27: 附注：in definition of macro ‘cast’
          #define cast(t, exp) ((t)(exp))
                                    ^
         /root/projects/Lualib/lfunc.c:26:42: 附注：in expansion of macro ‘sizeCclosure’
            GCObject *o = luaC_newobj(L, LUA_TCCL, sizeCclosure(n));
                                                   ^
         In file included from /root/projects/Lualib/lfunc.c:17:0:
         /root/projects/Lualib/lfunc.h:14:54: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
          #define sizeCclosure(n) (cast(int, sizeof(CClosure)) + \
                                                               ^
         /root/projects/Lualib/lfunc.c:26:42: 附注：in expansion of macro ‘sizeCclosure’
            GCObject *o = luaC_newobj(L, LUA_TCCL, sizeCclosure(n));
                                                   ^
         In file included from /root/projects/Lualib/lobject.h:15:0,
                          from /root/projects/Lualib/lfunc.h:11,
                          from /root/projects/Lualib/lfunc.c:17:
         /root/projects/Lualib/lfunc.c: 在函数‘luaF_newLclosure’中:
         /root/projects/Lualib/lfunc.h:18:57: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                                   cast(int, sizeof(TValue *)*((n)-1)))
                                                                  ^
         /root/projects/Lualib/llimits.h:111:27: 附注：in definition of macro ‘cast’
          #define cast(t, exp) ((t)(exp))
                                    ^
         /root/projects/Lualib/lfunc.c:34:42: 附注：in expansion of macro ‘sizeLclosure’
            GCObject *o = luaC_newobj(L, LUA_TLCL, sizeLclosure(n));
                                                   ^
         In file included from /root/projects/Lualib/lfunc.c:17:0:
         /root/projects/Lualib/lfunc.h:17:54: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
          #define sizeLclosure(n) (cast(int, sizeof(LClosure)) + \
                                                               ^
         /root/projects/Lualib/lfunc.c:34:42: 附注：in expansion of macro ‘sizeLclosure’
            GCObject *o = luaC_newobj(L, LUA_TLCL, sizeLclosure(n));
                                                   ^
         In file included from /root/projects/Lualib/lzio.h:13:0,
                          from /root/projects/Lualib/lstate.h:14,
                          from /root/projects/Lualib/lgc.h:12,
                          from /root/projects/Lualib/lfunc.c:18:
         /root/projects/Lualib/lfunc.c: 在函数‘luaF_freeproto’中:
         /root/projects/Lualib/lfunc.c:126:31: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_freearray(L, f->code, f->sizecode);
                                        ^
         /root/projects/Lualib/lmem.h:43:58: 附注：in definition of macro ‘luaM_freearray’
          #define luaM_freearray(L, b, n)   luaM_realloc_(L, (b), (n)*sizeof(*(b)), 0)
                                                                   ^
         /root/projects/Lualib/lfunc.c:127:28: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_freearray(L, f->p, f->sizep);
                                     ^
         /root/projects/Lualib/lmem.h:43:58: 附注：in definition of macro ‘luaM_freearray’
          #define luaM_freearray(L, b, n)   luaM_realloc_(L, (b), (n)*sizeof(*(b)), 0)
                                                                   ^
         /root/projects/Lualib/lfunc.c:128:28: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_freearray(L, f->k, f->sizek);
                                     ^
         /root/projects/Lualib/lmem.h:43:58: 附注：in definition of macro ‘luaM_freearray’
          #define luaM_freearray(L, b, n)   luaM_realloc_(L, (b), (n)*sizeof(*(b)), 0)
                                                                   ^
         /root/projects/Lualib/lfunc.c:129:35: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_freearray(L, f->lineinfo, f->sizelineinfo);
                                            ^
         /root/projects/Lualib/lmem.h:43:58: 附注：in definition of macro ‘luaM_freearray’
          #define luaM_freearray(L, b, n)   luaM_realloc_(L, (b), (n)*sizeof(*(b)), 0)
                                                                   ^
         /root/projects/Lualib/lfunc.c:130:34: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_freearray(L, f->locvars, f->sizelocvars);
                                           ^
         /root/projects/Lualib/lmem.h:43:58: 附注：in definition of macro ‘luaM_freearray’
          #define luaM_freearray(L, b, n)   luaM_realloc_(L, (b), (n)*sizeof(*(b)), 0)
                                                                   ^
         /root/projects/Lualib/lfunc.c:131:35: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_freearray(L, f->upvalues, f->sizeupvalues);
                                            ^
         /root/projects/Lualib/lmem.h:43:58: 附注：in definition of macro ‘luaM_freearray’
          #define luaM_freearray(L, b, n)   luaM_realloc_(L, (b), (n)*sizeof(*(b)), 0)
                                                                   ^
         /root/projects/Lualib/lgc.c: 在函数‘luaC_newobj’中:
         /root/projects/Lualib/lgc.c:212:3: 警告：‘lu_byte’转换自‘int’时可能改变值 [-Wconversion]
            o->tt = tt;
            ^
         In file included from /root/projects/Lualib/lgc.c:24:0:
         /root/projects/Lualib/lgc.c: 在函数‘reallymarkobject’中:
         /root/projects/Lualib/lstring.h:15:56: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
          #define sizelstring(l)  (sizeof(union UTString) + ((l) + 1) * sizeof(char))
                                                                 ^
         /root/projects/Lualib/lgc.c:241:23: 附注：in expansion of macro ‘sizelstring’
                g->GCmemtrav += sizelstring(gco2ts(o)->shrlen);
                                ^
         /root/projects/Lualib/lgc.c: 在函数‘traverseproto’中:
         /root/projects/Lualib/lgc.c:492:49: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            return sizeof(Proto) + sizeof(Instruction) * f->sizecode +
                                                          ^
         /root/projects/Lualib/lgc.c:493:45: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                                   sizeof(Proto *) * f->sizep +
                                                      ^
         /root/projects/Lualib/lgc.c:494:44: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                                   sizeof(TValue) * f->sizek +
                                                     ^
         /root/projects/Lualib/lgc.c:495:41: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                                   sizeof(int) * f->sizelineinfo +
                                                  ^
         /root/projects/Lualib/lgc.c:496:44: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                                   sizeof(LocVar) * f->sizelocvars +
                                                     ^
         /root/projects/Lualib/lgc.c:497:47: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                                   sizeof(Upvaldesc) * f->sizeupvalues;
                                                        ^
         /root/projects/Lualib/lgc.c:496:58: 警告：‘int’转换自‘long unsigned int’时可能改变值 [-Wconversion]
                                   sizeof(LocVar) * f->sizelocvars +
                                                                   ^
         In file included from /root/projects/Lualib/lobject.h:15:0,
                          from /root/projects/Lualib/lstate.h:12,
                          from /root/projects/Lualib/ldebug.h:11,
                          from /root/projects/Lualib/lgc.c:17:
         /root/projects/Lualib/lgc.c: 在函数‘traverseCclosure’中:
         /root/projects/Lualib/lfunc.h:15:55: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                                   cast(int, sizeof(TValue)*((n)-1)))
                                                                ^
         /root/projects/Lualib/llimits.h:111:27: 附注：in definition of macro ‘cast’
          #define cast(t, exp) ((t)(exp))
                                    ^
         /root/projects/Lualib/lgc.c:505:10: 附注：in expansion of macro ‘sizeCclosure’
            return sizeCclosure(cl->nupvalues);
                   ^
         In file included from /root/projects/Lualib/lgc.c:19:0:
         /root/projects/Lualib/lfunc.h:14:54: 警告：‘lu_mem’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
          #define sizeCclosure(n) (cast(int, sizeof(CClosure)) + \
                                                               ^
         /root/projects/Lualib/lgc.c:505:10: 附注：in expansion of macro ‘sizeCclosure’
            return sizeCclosure(cl->nupvalues);
                   ^
         In file included from /root/projects/Lualib/lobject.h:15:0,
                          from /root/projects/Lualib/lstate.h:12,
                          from /root/projects/Lualib/ldebug.h:11,
                          from /root/projects/Lualib/lgc.c:17:
         /root/projects/Lualib/lgc.c: 在函数‘traverseLclosure’中:
         /root/projects/Lualib/lfunc.h:18:57: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                                   cast(int, sizeof(TValue *)*((n)-1)))
                                                                  ^
         /root/projects/Lualib/llimits.h:111:27: 附注：in definition of macro ‘cast’
          #define cast(t, exp) ((t)(exp))
                                    ^
         /root/projects/Lualib/lgc.c:526:10: 附注：in expansion of macro ‘sizeLclosure’
            return sizeLclosure(cl->nupvalues);
                   ^
         In file included from /root/projects/Lualib/lgc.c:19:0:
         /root/projects/Lualib/lfunc.h:17:54: 警告：‘lu_mem’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
          #define sizeLclosure(n) (cast(int, sizeof(LClosure)) + \
                                                               ^
         /root/projects/Lualib/lgc.c:526:10: 附注：in expansion of macro ‘sizeLclosure’
            return sizeLclosure(cl->nupvalues);
                   ^
         /root/projects/Lualib/lgc.c: 在函数‘traversethread’中:
         /root/projects/Lualib/lgc.c:550:50: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            return (sizeof(lua_State) + sizeof(TValue) * th->stacksize +
                                                           ^
         /root/projects/Lualib/lgc.c: 在函数‘propagatemark’中:
         /root/projects/Lualib/lgc.c:594:27: 警告：‘lu_mem’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                size = traverseproto(g, p);
                                    ^
         In file included from /root/projects/Lualib/lzio.h:13:0,
                          from /root/projects/Lualib/lstate.h:14,
                          from /root/projects/Lualib/ldebug.h:11,
                          from /root/projects/Lualib/lgc.c:17:
         /root/projects/Lualib/lgc.c: 在函数‘freeLclosure’中:
         /root/projects/Lualib/lfunc.h:18:57: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                                   cast(int, sizeof(TValue *)*((n)-1)))
                                                                  ^
         /root/projects/Lualib/lmem.h:41:54: 附注：in definition of macro ‘luaM_freemem’
          #define luaM_freemem(L, b, s) luaM_realloc_(L, (b), (s), 0)
                                                               ^
         /root/projects/Lualib/lfunc.h:18:26: 附注：in expansion of macro ‘cast’
                                   cast(int, sizeof(TValue *)*((n)-1)))
                                   ^
         /root/projects/Lualib/lgc.c:693:23: 附注：in expansion of macro ‘sizeLclosure’
            luaM_freemem(L, cl, sizeLclosure(cl->nupvalues));
                                ^
         /root/projects/Lualib/lfunc.h:17:54: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
          #define sizeLclosure(n) (cast(int, sizeof(LClosure)) + \
                                                               ^
         /root/projects/Lualib/lmem.h:41:54: 附注：in definition of macro ‘luaM_freemem’
          #define luaM_freemem(L, b, s) luaM_realloc_(L, (b), (s), 0)
                                                               ^
         /root/projects/Lualib/lgc.c:693:23: 附注：in expansion of macro ‘sizeLclosure’
            luaM_freemem(L, cl, sizeLclosure(cl->nupvalues));
                                ^
         /root/projects/Lualib/lgc.c: 在函数‘freeobj’中:
         /root/projects/Lualib/lfunc.h:15:55: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                                   cast(int, sizeof(TValue)*((n)-1)))
                                                                ^
         /root/projects/Lualib/lmem.h:41:54: 附注：in definition of macro ‘luaM_freemem’
          #define luaM_freemem(L, b, s) luaM_realloc_(L, (b), (s), 0)
                                                               ^
         /root/projects/Lualib/lfunc.h:15:26: 附注：in expansion of macro ‘cast’
                                   cast(int, sizeof(TValue)*((n)-1)))
                                   ^
         /root/projects/Lualib/lgc.c:705:26: 附注：in expansion of macro ‘sizeCclosure’
                luaM_freemem(L, o, sizeCclosure(gco2ccl(o)->nupvalues));
                                   ^
         /root/projects/Lualib/lfunc.h:14:54: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
          #define sizeCclosure(n) (cast(int, sizeof(CClosure)) + \
                                                               ^
         /root/projects/Lualib/lmem.h:41:54: 附注：in definition of macro ‘luaM_freemem’
          #define luaM_freemem(L, b, s) luaM_realloc_(L, (b), (s), 0)
                                                               ^
         /root/projects/Lualib/lgc.c:705:26: 附注：in expansion of macro ‘sizeCclosure’
                luaM_freemem(L, o, sizeCclosure(gco2ccl(o)->nupvalues));
                                   ^
         /root/projects/Lualib/lstring.h:15:56: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
          #define sizelstring(l)  (sizeof(union UTString) + ((l) + 1) * sizeof(char))
                                                                 ^
         /root/projects/Lualib/lmem.h:41:54: 附注：in definition of macro ‘luaM_freemem’
          #define luaM_freemem(L, b, s) luaM_realloc_(L, (b), (s), 0)
                                                               ^
         /root/projects/Lualib/lgc.c:713:26: 附注：in expansion of macro ‘sizelstring’
                luaM_freemem(L, o, sizelstring(gco2ts(o)->shrlen));
                                   ^
         /root/projects/Lualib/lgc.c: 在函数‘checkSizes’中:
         /root/projects/Lualib/lgc.c:783:32: 警告：‘long unsigned int’转换自‘l_mem’时可能会改变结果的符号 [-Wsign-conversion]
              g->GCestimate += g->GCdebt - olddebt;  /* update estimate */
                                         ^
         /root/projects/Lualib/lgc.c: 在函数‘GCTM’中:
         /root/projects/Lualib/lgc.c:824:23: 警告：‘short unsigned int’转换自‘int’时可能改变值 [-Wconversion]
              L->ci->callstatus &= ~CIST_FIN;  /* not running a finalizer anymore */
                                ^
         /root/projects/Lualib/lgc.c:826:5: 警告：‘lu_byte’转换自‘int’时可能改变值 [-Wconversion]
              g->gcrunning = running;  /* restore state */
              ^
         /root/projects/Lualib/lgc.c: 在函数‘runafewfinalizers’中:
         /root/projects/Lualib/lgc.c:852:3: 警告：‘int’转换自‘unsigned int’时可能会改变结果的符号 [-Wsign-conversion]
            return i;
            ^
         /root/projects/Lualib/lgc.c: 在函数‘setpause’中:
         /root/projects/Lualib/lgc.c:942:34: 警告：‘l_mem’转换自‘lu_mem’时可能会改变结果的符号 [-Wsign-conversion]
            l_mem estimate = g->GCestimate / PAUSEADJ;  /* adjust 'estimate' */
                                           ^
         /root/projects/Lualib/lgc.c:947:3: 警告：‘long unsigned int’转换自‘l_mem’时可能会改变结果的符号 [-Wsign-conversion]
            debt = gettotalbytes(g) - threshold;
            ^
         /root/projects/Lualib/lgc.c:947:27: 警告：‘l_mem’转换自‘long unsigned int’时可能会改变结果的符号 [-Wsign-conversion]
            debt = gettotalbytes(g) - threshold;
                                    ^
         /root/projects/Lualib/lgc.c: 在函数‘atomic’中:
         /root/projects/Lualib/lgc.c:998:11: 警告：‘l_mem’转换自‘lu_mem’时可能会改变结果的符号 [-Wsign-conversion]
            work = g->GCmemtrav;  /* stop counting (do not recount 'grayagain') */
                    ^
         /root/projects/Lualib/lgc.c:1008:3: 警告：‘long unsigned int’转换自‘l_mem’时可能会改变结果的符号 [-Wsign-conversion]
            work += g->GCmemtrav;  /* stop counting (objects being finalized) */
            ^
         /root/projects/Lualib/lgc.c:1008:8: 警告：‘l_mem’转换自‘long unsigned int’时可能会改变结果的符号 [-Wsign-conversion]
            work += g->GCmemtrav;  /* stop counting (objects being finalized) */
                 ^
         /root/projects/Lualib/lgc.c:1024:3: 警告：‘long unsigned int’转换自‘l_mem’时可能会改变结果的符号 [-Wsign-conversion]
            work += g->GCmemtrav;  /* complete counting */
            ^
         /root/projects/Lualib/lgc.c:1024:8: 警告：‘l_mem’转换自‘long unsigned int’时可能会改变结果的符号 [-Wsign-conversion]
            work += g->GCmemtrav;  /* complete counting */
                 ^
         /root/projects/Lualib/lgc.c: 在函数‘sweepstep’中:
         /root/projects/Lualib/lgc.c:1034:32: 警告：‘long unsigned int’转换自‘l_mem’时可能会改变结果的符号 [-Wsign-conversion]
              g->GCestimate += g->GCdebt - olddebt;  /* update estimate */
                                         ^
         /root/projects/Lualib/lgc.c:1039:3: 警告：‘lu_byte’转换自‘int’时可能改变值 [-Wconversion]
            g->gcstate = nextstate;
            ^
         /root/projects/Lualib/lgc.c: 在函数‘singlestep’中:
         /root/projects/Lualib/lgc.c:1049:29: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                g->GCmemtrav = g->strt.size * sizeof(GCObject*);
                                      ^
         /root/projects/Lualib/lgc.c:1065:20: 警告：‘lu_mem’转换自‘l_mem’时可能会改变结果的符号 [-Wsign-conversion]
                work = atomic(L);  /* work is what was traversed by 'atomic' */
                             ^
         /root/projects/Lualib/lgc.c:1088:9: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                  return (n * GCFINALIZECOST);
                  ^
         /root/projects/Lualib/lgc.c: 在函数‘luaC_step’中:
         /root/projects/Lualib/lgc.c:1138:5: 警告：‘long unsigned int’转换自‘l_mem’时可能会改变结果的符号 [-Wsign-conversion]
              debt -= work;
              ^
         /root/projects/Lualib/lgc.c:1138:10: 警告：‘l_mem’转换自‘long unsigned int’时可能会改变结果的符号 [-Wsign-conversion]
              debt -= work;
                   ^
         /root/projects/Lualib/liolib.c: 在函数‘nextc’中:
         /root/projects/Lualib/liolib.c:407:27: 警告：‘char’转换自‘int’时可能改变值 [-Wconversion]
              rn->buff[rn->n++] = rn->c;  /* save current char */
                                    ^
         /root/projects/Lualib/liolib.c: 在函数‘read_line’中:
         /root/projects/Lualib/liolib.c:491:7: 警告：‘char’转换自‘int’时可能改变值 [-Wconversion]
                buff[i++] = c;
                ^
         /root/projects/Lualib/liolib.c:493:5: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
              luaL_addsize(&b, i);
              ^
         /root/projects/Lualib/liolib.c:496:5: 警告：‘char’转换自‘int’时可能改变值 [-Wconversion]
              luaL_addchar(&b, c);  /* add ending newline to result */
              ^
         /root/projects/Lualib/llex.c: 在函数‘read_long_string’中:
         /root/projects/Lualib/llex.c:299:64: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                                               luaZ_bufflen(ls->buff) - 2*(2 + sep));
                                                                         ^
         /root/projects/Lualib/llex.c: 在函数‘readutf8esc’中:
         /root/projects/Lualib/llex.c:332:14: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            r = gethexa(ls);  /* must have at least one digit */
                       ^
         /root/projects/Lualib/llex.c:335:34: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
              r = (r << 4) + luaO_hexavalue(ls->current);
                                           ^
         /root/projects/Lualib/llex.c:340:3: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaZ_buffremove(ls->buff, i);  /* remove saved chars from buffer */
            ^
         /root/projects/Lualib/llex.c: 在函数‘readdecesc’中:
         /root/projects/Lualib/llex.c:361:3: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaZ_buffremove(ls->buff, i);  /* remove read digits from buffer */
            ^
         In file included from /root/projects/Lualib/lzio.h:13:0,
                          from /root/projects/Lualib/lstate.h:14,
                          from /root/projects/Lualib/ldebug.h:11,
                          from /root/projects/Lualib/lmem.c:17:
         /root/projects/Lualib/lmem.c: 在函数‘luaM_growaux_’中:
         /root/projects/Lualib/lmem.c:62:38: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            newblock = luaM_reallocv(L, block, *size, newsize, size_elems);
                                               ^
         /root/projects/Lualib/lmem.h:33:27: 附注：in definition of macro ‘luaM_reallocv’
             luaM_realloc_(L, (b), (on)*(e), (n)*(e)))
                                    ^
         /root/projects/Lualib/lmem.c:62:3: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            newblock = luaM_reallocv(L, block, *size, newsize, size_elems);
            ^
         /root/projects/Lualib/lmem.c: 在函数‘luaM_realloc_’中:
         /root/projects/Lualib/lmem.c:97:17: 警告：‘long unsigned int’转换自‘l_mem’时可能会改变结果的符号 [-Wsign-conversion]
            g->GCdebt = (g->GCdebt + nsize) - realosize;
                          ^
         /root/projects/Lualib/lmem.c:97:35: 警告：‘l_mem’转换自‘long unsigned int’时可能会改变结果的符号 [-Wsign-conversion]
            g->GCdebt = (g->GCdebt + nsize) - realosize;
                                            ^
         /root/projects/Lualib/loadlib.c: 在函数‘pushnexttemplate’中:
         /root/projects/Lualib/loadlib.c:430:30: 警告：‘size_t’转换自‘long int’时可能会改变结果的符号 [-Wsign-conversion]
            lua_pushlstring(L, path, l - path);  /* template */
                                       ^
         /root/projects/Lualib/loadlib.c: 在函数‘loadfunc’中:
         /root/projects/Lualib/loadlib.c:519:49: 警告：‘size_t’转换自‘long int’时可能会改变结果的符号 [-Wsign-conversion]
              openfunc = lua_pushlstring(L, modname, mark - modname);
                                                          ^
         /root/projects/Lualib/loadlib.c: 在函数‘searcher_Croot’中:
         /root/projects/Lualib/loadlib.c:544:30: 警告：‘size_t’转换自‘long int’时可能会改变结果的符号 [-Wsign-conversion]
            lua_pushlstring(L, name, p - name);
                                       ^
         /root/projects/Lualib/lobject.c: 在函数‘luaO_int2fb’中:
         /root/projects/Lualib/lobject.c:43:3: 警告：‘int’转换自‘unsigned int’时可能会改变结果的符号 [-Wsign-conversion]
            if (x < 8) return x;
            ^
         /root/projects/Lualib/lobject.c: 在函数‘l_str2int’中:
         /root/projects/Lualib/lobject.c:309:34: 警告：‘lua_Unsigned’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                a = a * 16 + luaO_hexavalue(*s);
                                           ^
         /root/projects/Lualib/lobject.c:318:7: 警告：‘lua_Unsigned’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                a = a * 10 + d;
                ^
         /root/projects/Lualib/lobject.c: 在函数‘luaO_str2num’中:
         /root/projects/Lualib/lobject.c:342:18: 警告：‘size_t’转换自‘long int’时可能会改变结果的符号 [-Wsign-conversion]
            return (e - s) + 1;  /* success; return string size */
                           ^
         In file included from /root/projects/Lualib/lua.h:16:0,
                          from /root/projects/Lualib/lobject.c:20:
         /root/projects/Lualib/lobject.c: 在函数‘luaO_tostring’中:
         /root/projects/Lualib/luaconf.h:606:37: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
          #define l_sprintf(s,sz,f,i) snprintf(s,sz,f,i)
                                              ^
         /root/projects/Lualib/luaconf.h:531:2: 附注：in expansion of macro ‘l_sprintf’
           l_sprintf((s), sz, LUA_INTEGER_FMT, (LUAI_UACINT)(n))
           ^
         /root/projects/Lualib/lobject.c:376:11: 附注：in expansion of macro ‘lua_integer2str’
              len = lua_integer2str(buff, sizeof(buff), ivalue(obj));
                    ^
         /root/projects/Lualib/luaconf.h:606:37: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
          #define l_sprintf(s,sz,f,i) snprintf(s,sz,f,i)
                                              ^
         /root/projects/Lualib/luaconf.h:437:2: 附注：in expansion of macro ‘l_sprintf’
           l_sprintf((s), sz, LUA_NUMBER_FMT, (LUAI_UACNUMBER)(n))
           ^
         /root/projects/Lualib/lobject.c:378:11: 附注：in expansion of macro ‘lua_number2str’
              len = lua_number2str(buff, sizeof(buff), fltvalue(obj));
                    ^
         /root/projects/Lualib/lobject.c: 在函数‘luaO_pushvfstring’中:
         /root/projects/Lualib/lobject.c:405:23: 警告：‘size_t’转换自‘long int’时可能会改变结果的符号 [-Wsign-conversion]
              pushstr(L, fmt, e - fmt);
                                ^
         /root/projects/Lualib/lobject.c:440:9: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                  pushstr(L, buff, l);
                  ^
         In file included from /root/projects/Lualib/lctype.h:36:0,
                          from /root/projects/Lualib/lobject.c:22:
         /root/projects/Lualib/llimits.h:111:23: 警告：‘long unsigned int’转换自‘long int’时可能会改变结果的符号 [-Wsign-conversion]
          #define cast(t, exp) ((t)(exp))
                                ^
         /root/projects/Lualib/lobject.c:445:36: 附注：in expansion of macro ‘cast’
                  int l = luaO_utf8esc(buff, cast(long, va_arg(argp, long)));
                                             ^
         /root/projects/Lualib/lobject.c:446:9: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                  pushstr(L, buff + UTF8BUFFSZ - l, l);
                  ^
         /root/projects/Lualib/lobject.c: 在函数‘luaO_chunkid’中:
         /root/projects/Lualib/lobject.c:514:30: 警告：‘size_t’转换自‘long int’时可能会改变结果的符号 [-Wsign-conversion]
                if (nl != NULL) l = nl - source;  /* stop at first newline */
                                       ^
         /root/projects/Lualib/loslib.c: 在函数‘checkoption’中:
         /root/projects/Lualib/loslib.c:267:5: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
              else if (memcmp(conv, option, oplen) == 0) {  /* match? */
              ^
         /root/projects/Lualib/loslib.c:268:7: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                memcpy(buff, conv, oplen);  /* copy valid option to buffer */
                ^
         /root/projects/Lualib/lparser.c: 在函数‘adjust_assign’中:
         /root/projects/Lualib/lparser.c:327:21: 警告：‘lu_byte’转换自‘int’时可能改变值 [-Wconversion]
              ls->fs->freereg -= nexps - nvars;  /* remove extra values */
                              ^
         /root/projects/Lualib/lparser.c: 在函数‘codeclosure’中:
         /root/projects/Lualib/lparser.c:524:66: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            init_exp(v, VRELOCABLE, luaK_codeABx(fs, OP_CLOSURE, 0, fs->np - 1));
                                                                           ^
         In file included from /root/projects/Lualib/lobject.h:15:0,
                          from /root/projects/Lualib/llex.h:10,
                          from /root/projects/Lualib/lcode.h:10,
                          from /root/projects/Lualib/lparser.c:17:
         /root/projects/Lualib/lparser.c: 在函数‘close_func’中:
         /root/projects/Lualib/lparser.c:558:35: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_reallocvector(L, f->code, f->sizecode, fs->pc, Instruction);
                                            ^
         /root/projects/Lualib/llimits.h:111:27: 附注：in definition of macro ‘cast’
          #define cast(t, exp) ((t)(exp))
                                    ^
         /root/projects/Lualib/lmem.h:57:19: 附注：in expansion of macro ‘luaM_reallocv’
             ((v)=cast(t *, luaM_reallocv(L, v, oldn, n, sizeof(t))))
                            ^
         /root/projects/Lualib/lparser.c:558:3: 附注：in expansion of macro ‘luaM_reallocvector’
            luaM_reallocvector(L, f->code, f->sizecode, fs->pc, Instruction);
            ^
         /root/projects/Lualib/lparser.c:558:49: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_reallocvector(L, f->code, f->sizecode, fs->pc, Instruction);
                                                          ^
         /root/projects/Lualib/llimits.h:111:27: 附注：in definition of macro ‘cast’
          #define cast(t, exp) ((t)(exp))
                                    ^
         /root/projects/Lualib/lmem.h:57:19: 附注：in expansion of macro ‘luaM_reallocv’
             ((v)=cast(t *, luaM_reallocv(L, v, oldn, n, sizeof(t))))
                            ^
         /root/projects/Lualib/lparser.c:558:3: 附注：in expansion of macro ‘luaM_reallocvector’
            luaM_reallocvector(L, f->code, f->sizecode, fs->pc, Instruction);
            ^
         /root/projects/Lualib/lparser.c:560:39: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_reallocvector(L, f->lineinfo, f->sizelineinfo, fs->pc, int);
                                                ^
         /root/projects/Lualib/llimits.h:111:27: 附注：in definition of macro ‘cast’
          #define cast(t, exp) ((t)(exp))
                                    ^
         /root/projects/Lualib/lmem.h:57:19: 附注：in expansion of macro ‘luaM_reallocv’
             ((v)=cast(t *, luaM_reallocv(L, v, oldn, n, sizeof(t))))
                            ^
         /root/projects/Lualib/lparser.c:560:3: 附注：in expansion of macro ‘luaM_reallocvector’
            luaM_reallocvector(L, f->lineinfo, f->sizelineinfo, fs->pc, int);
            ^
         /root/projects/Lualib/lparser.c:560:57: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_reallocvector(L, f->lineinfo, f->sizelineinfo, fs->pc, int);
                                                                  ^
         /root/projects/Lualib/llimits.h:111:27: 附注：in definition of macro ‘cast’
          #define cast(t, exp) ((t)(exp))
                                    ^
         /root/projects/Lualib/lmem.h:57:19: 附注：in expansion of macro ‘luaM_reallocv’
             ((v)=cast(t *, luaM_reallocv(L, v, oldn, n, sizeof(t))))
                            ^
         /root/projects/Lualib/lparser.c:560:3: 附注：in expansion of macro ‘luaM_reallocvector’
            luaM_reallocvector(L, f->lineinfo, f->sizelineinfo, fs->pc, int);
            ^
         /root/projects/Lualib/lparser.c:562:32: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_reallocvector(L, f->k, f->sizek, fs->nk, TValue);
                                         ^
         /root/projects/Lualib/llimits.h:111:27: 附注：in definition of macro ‘cast’
          #define cast(t, exp) ((t)(exp))
                                    ^
         /root/projects/Lualib/lmem.h:57:19: 附注：in expansion of macro ‘luaM_reallocv’
             ((v)=cast(t *, luaM_reallocv(L, v, oldn, n, sizeof(t))))
                            ^
         /root/projects/Lualib/lparser.c:562:3: 附注：in expansion of macro ‘luaM_reallocvector’
            luaM_reallocvector(L, f->k, f->sizek, fs->nk, TValue);
            ^
         /root/projects/Lualib/lparser.c:562:43: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_reallocvector(L, f->k, f->sizek, fs->nk, TValue);
                                                    ^
         /root/projects/Lualib/llimits.h:111:27: 附注：in definition of macro ‘cast’
          #define cast(t, exp) ((t)(exp))
                                    ^
         /root/projects/Lualib/lmem.h:57:19: 附注：in expansion of macro ‘luaM_reallocv’
             ((v)=cast(t *, luaM_reallocv(L, v, oldn, n, sizeof(t))))
                            ^
         /root/projects/Lualib/lparser.c:562:3: 附注：in expansion of macro ‘luaM_reallocvector’
            luaM_reallocvector(L, f->k, f->sizek, fs->nk, TValue);
            ^
         /root/projects/Lualib/lparser.c:564:32: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_reallocvector(L, f->p, f->sizep, fs->np, Proto *);
                                         ^
         /root/projects/Lualib/llimits.h:111:27: 附注：in definition of macro ‘cast’
          #define cast(t, exp) ((t)(exp))
                                    ^
         /root/projects/Lualib/lmem.h:57:19: 附注：in expansion of macro ‘luaM_reallocv’
             ((v)=cast(t *, luaM_reallocv(L, v, oldn, n, sizeof(t))))
                            ^
         /root/projects/Lualib/lparser.c:564:3: 附注：in expansion of macro ‘luaM_reallocvector’
            luaM_reallocvector(L, f->p, f->sizep, fs->np, Proto *);
            ^
         /root/projects/Lualib/lparser.c:564:43: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_reallocvector(L, f->p, f->sizep, fs->np, Proto *);
                                                    ^
         /root/projects/Lualib/llimits.h:111:27: 附注：in definition of macro ‘cast’
          #define cast(t, exp) ((t)(exp))
                                    ^
         /root/projects/Lualib/lmem.h:57:19: 附注：in expansion of macro ‘luaM_reallocv’
             ((v)=cast(t *, luaM_reallocv(L, v, oldn, n, sizeof(t))))
                            ^
         /root/projects/Lualib/lparser.c:564:3: 附注：in expansion of macro ‘luaM_reallocvector’
            luaM_reallocvector(L, f->p, f->sizep, fs->np, Proto *);
            ^
         /root/projects/Lualib/lparser.c:566:38: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_reallocvector(L, f->locvars, f->sizelocvars, fs->nlocvars, LocVar);
                                               ^
         /root/projects/Lualib/llimits.h:111:27: 附注：in definition of macro ‘cast’
          #define cast(t, exp) ((t)(exp))
                                    ^
         /root/projects/Lualib/lmem.h:57:19: 附注：in expansion of macro ‘luaM_reallocv’
             ((v)=cast(t *, luaM_reallocv(L, v, oldn, n, sizeof(t))))
                            ^
         /root/projects/Lualib/lparser.c:566:3: 附注：in expansion of macro ‘luaM_reallocvector’
            luaM_reallocvector(L, f->locvars, f->sizelocvars, fs->nlocvars, LocVar);
            ^
         /root/projects/Lualib/lparser.c:566:3: 警告：‘long unsigned int’转换自‘short int’时可能会改变结果的符号 [-Wsign-conversion]
         In file included from /root/projects/Lualib/lobject.h:15:0,
                          from /root/projects/Lualib/llex.h:10,
                          from /root/projects/Lualib/lcode.h:10,
                          from /root/projects/Lualib/lparser.c:17:
         /root/projects/Lualib/lparser.c:568:39: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_reallocvector(L, f->upvalues, f->sizeupvalues, fs->nups, Upvaldesc);
                                                ^
         /root/projects/Lualib/llimits.h:111:27: 附注：in definition of macro ‘cast’
          #define cast(t, exp) ((t)(exp))
                                    ^
         /root/projects/Lualib/lmem.h:57:19: 附注：in expansion of macro ‘luaM_reallocv’
             ((v)=cast(t *, luaM_reallocv(L, v, oldn, n, sizeof(t))))
                            ^
         /root/projects/Lualib/lparser.c:568:3: 附注：in expansion of macro ‘luaM_reallocvector’
            luaM_reallocvector(L, f->upvalues, f->sizeupvalues, fs->nups, Upvaldesc);
            ^
         /root/projects/Lualib/lparser.c: 在函数‘recfield’中:
         /root/projects/Lualib/lparser.c:663:3: 警告：‘lu_byte’转换自‘int’时可能改变值 [-Wconversion]
            fs->freereg = reg;  /* free registers */
            ^
         In file included from /root/projects/Lualib/lobject.h:15:0,
                          from /root/projects/Lualib/llex.h:10,
                          from /root/projects/Lualib/lcode.h:10,
                          from /root/projects/Lualib/lparser.c:17:
         /root/projects/Lualib/lparser.c: 在函数‘constructor’中:
         /root/projects/Lualib/lparser.c:745:43: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            SETARG_B(fs->f->code[pc], luaO_int2fb(cc.na)); /* set initial array size */
                                                    ^
         /root/projects/Lualib/llimits.h:111:27: 附注：in definition of macro ‘cast’
          #define cast(t, exp) ((t)(exp))
                                    ^
         /root/projects/Lualib/lopcodes.h:101:23: 附注：in expansion of macro ‘setarg’
          #define SETARG_B(i,v) setarg(i, v, POS_B, SIZE_B)
                                ^
         /root/projects/Lualib/lparser.c:745:3: 附注：in expansion of macro ‘SETARG_B’
            SETARG_B(fs->f->code[pc], luaO_int2fb(cc.na)); /* set initial array size */
            ^
         /root/projects/Lualib/lparser.c:746:43: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            SETARG_C(fs->f->code[pc], luaO_int2fb(cc.nh));  /* set initial table size */
                                                    ^
         /root/projects/Lualib/llimits.h:111:27: 附注：in definition of macro ‘cast’
          #define cast(t, exp) ((t)(exp))
                                    ^
         /root/projects/Lualib/lopcodes.h:104:23: 附注：in expansion of macro ‘setarg’
          #define SETARG_C(i,v) setarg(i, v, POS_C, SIZE_C)
                                ^
         /root/projects/Lualib/lparser.c:746:3: 附注：in expansion of macro ‘SETARG_C’
            SETARG_C(fs->f->code[pc], luaO_int2fb(cc.nh));  /* set initial table size */
            ^
         /root/projects/Lualib/lparser.c: 在函数‘funcargs’中:
         /root/projects/Lualib/lparser.c:857:21: 警告：‘lu_byte’转换自‘int’时可能改变值 [-Wconversion]
            fs->freereg = base+1;  /* call remove function and arguments and leaves
                              ^
         /root/projects/Lualib/lparser.c: 在函数‘check_conflict’中:
         /root/projects/Lualib/lparser.c:1129:9: 警告：‘lu_byte’转换自‘int’时可能改变值 [-Wconversion]
                  lh->v.u.ind.t = extra;  /* previous assignment will use safe copy */
                  ^
         /root/projects/Lualib/lparser.c:1134:9: 警告：‘short int’转换自‘int’时可能改变值 [-Wconversion]
                  lh->v.u.ind.idx = extra;  /* previous assignment will use safe copy */
                  ^
         /root/projects/Lualib/lstate.c: 在函数‘makeseed’中:
         /root/projects/Lualib/lstate.c:85:3: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            addbuff(buff, p, L);  /* heap variable */
            ^
         /root/projects/Lualib/lstate.c:79:37: 警告：‘int’转换自‘long unsigned int’时可能改变值 [-Wconversion]
              memcpy(b + p, &t, sizeof(t)); p += sizeof(t); }
                                              ^
         /root/projects/Lualib/lstate.c:85:3: 附注：in expansion of macro ‘addbuff’
            addbuff(buff, p, L);  /* heap variable */
            ^
         /root/projects/Lualib/lstate.c:86:3: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            addbuff(buff, p, &h);  /* local variable */
            ^
         /root/projects/Lualib/lstate.c:79:37: 警告：‘int’转换自‘long unsigned int’时可能改变值 [-Wconversion]
              memcpy(b + p, &t, sizeof(t)); p += sizeof(t); }
                                              ^
         /root/projects/Lualib/lstate.c:86:3: 附注：in expansion of macro ‘addbuff’
            addbuff(buff, p, &h);  /* local variable */
            ^
         /root/projects/Lualib/lstate.c:87:3: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            addbuff(buff, p, luaO_nilobject);  /* global variable */
            ^
         /root/projects/Lualib/lstate.c:79:37: 警告：‘int’转换自‘long unsigned int’时可能改变值 [-Wconversion]
              memcpy(b + p, &t, sizeof(t)); p += sizeof(t); }
                                              ^
         /root/projects/Lualib/lstate.c:87:3: 附注：in expansion of macro ‘addbuff’
            addbuff(buff, p, luaO_nilobject);  /* global variable */
            ^
         /root/projects/Lualib/lstate.c:88:3: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            addbuff(buff, p, &lua_newstate);  /* public function */
            ^
         /root/projects/Lualib/lstate.c:79:37: 警告：‘int’转换自‘long unsigned int’时可能改变值 [-Wconversion]
              memcpy(b + p, &t, sizeof(t)); p += sizeof(t); }
                                              ^
         /root/projects/Lualib/lstate.c:88:3: 附注：in expansion of macro ‘addbuff’
            addbuff(buff, p, &lua_newstate);  /* public function */
            ^
         /root/projects/Lualib/lstate.c:90:3: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            return luaS_hash(buff, p, h);
            ^
         In file included from /root/projects/Lualib/lapi.h:11:0,
                          from /root/projects/Lualib/lstate.c:18:
         /root/projects/Lualib/lstate.c: 在函数‘luaE_setdebt’中:
         /root/projects/Lualib/llimits.h:111:23: 警告：‘l_mem’转换自‘long unsigned int’时可能会改变结果的符号 [-Wsign-conversion]
          #define cast(t, exp) ((t)(exp))
                                ^
         /root/projects/Lualib/lstate.h:243:26: 附注：in expansion of macro ‘cast’
          #define gettotalbytes(g) cast(lu_mem, (g)->totalbytes + (g)->GCdebt)
                                   ^
         /root/projects/Lualib/lstate.c:99:14: 附注：in expansion of macro ‘gettotalbytes’
            l_mem tb = gettotalbytes(g);
                       ^
         In file included from /root/projects/Lualib/lzio.h:13:0,
                          from /root/projects/Lualib/lstate.h:14,
                          from /root/projects/Lualib/lapi.h:12,
                          from /root/projects/Lualib/lstate.c:18:
         /root/projects/Lualib/lstate.c: 在函数‘freestack’中:
         /root/projects/Lualib/lstate.c:177:32: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_freearray(L, L->stack, L->stacksize);  /* free stack array */
                                         ^
         /root/projects/Lualib/lmem.h:43:58: 附注：in definition of macro ‘luaM_freearray’
          #define luaM_freearray(L, b, n)   luaM_realloc_(L, (b), (n)*sizeof(*(b)), 0)
                                                                   ^
         /root/projects/Lualib/lstate.c: 在函数‘close_state’中:
         /root/projects/Lualib/lstate.c:248:48: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaM_freearray(L, G(L)->strt.hash, G(L)->strt.size);
                                                         ^
         /root/projects/Lualib/lmem.h:43:58: 附注：in definition of macro ‘luaM_freearray’
          #define luaM_freearray(L, b, n)   luaM_realloc_(L, (b), (n)*sizeof(*(b)), 0)
                                                                   ^
         In file included from /root/projects/Lualib/lobject.h:15:0,
                          from /root/projects/Lualib/lstate.h:12,
                          from /root/projects/Lualib/ldebug.h:11,
                          from /root/projects/Lualib/lstring.c:17:
         /root/projects/Lualib/lstring.c: 在函数‘luaS_resize’中:
         /root/projects/Lualib/lstring.c:75:39: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
              luaM_reallocvector(L, tb->hash, tb->size, newsize, TString *);
                                                ^
         /root/projects/Lualib/llimits.h:111:27: 附注：in definition of macro ‘cast’
          #define cast(t, exp) ((t)(exp))
                                    ^
         /root/projects/Lualib/lmem.h:57:19: 附注：in expansion of macro ‘luaM_reallocv’
             ((v)=cast(t *, luaM_reallocv(L, v, oldn, n, sizeof(t))))
                            ^
         /root/projects/Lualib/lstring.c:75:5: 附注：in expansion of macro ‘luaM_reallocvector’
              luaM_reallocvector(L, tb->hash, tb->size, newsize, TString *);
              ^
         /root/projects/Lualib/lstring.c:75:5: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
         In file included from /root/projects/Lualib/lobject.h:15:0,
                          from /root/projects/Lualib/lstate.h:12,
                          from /root/projects/Lualib/ldebug.h:11,
                          from /root/projects/Lualib/lstring.c:17:
         /root/projects/Lualib/lobject.h:515:57: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
           (check_exp((size&(size-1))==0, (cast(int, (s) & ((size)-1)))))
                                                                  ^
         /root/projects/Lualib/llimits.h:90:26: 附注：in definition of macro ‘check_exp’
          #define check_exp(c,e)  (e)
                                   ^
         /root/projects/Lualib/lobject.h:515:34: 附注：in expansion of macro ‘cast’
           (check_exp((size&(size-1))==0, (cast(int, (s) & ((size)-1)))))
                                           ^
         /root/projects/Lualib/lstring.c:84:24: 附注：in expansion of macro ‘lmod’
                unsigned int h = lmod(p->hash, newsize);  /* new position */
                                 ^
         /root/projects/Lualib/llimits.h:111:23: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
          #define cast(t, exp) ((t)(exp))
                                ^
         /root/projects/Lualib/llimits.h:90:26: 附注：in definition of macro ‘check_exp’
          #define check_exp(c,e)  (e)
                                   ^
         /root/projects/Lualib/lobject.h:515:34: 附注：in expansion of macro ‘cast’
           (check_exp((size&(size-1))==0, (cast(int, (s) & ((size)-1)))))
                                           ^
         /root/projects/Lualib/lstring.c:84:24: 附注：in expansion of macro ‘lmod’
                unsigned int h = lmod(p->hash, newsize);  /* new position */
                                 ^
         /root/projects/Lualib/lstring.c:93:39: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
              luaM_reallocvector(L, tb->hash, tb->size, newsize, TString *);
                                                ^
         /root/projects/Lualib/llimits.h:111:27: 附注：in definition of macro ‘cast’
          #define cast(t, exp) ((t)(exp))
                                    ^
         /root/projects/Lualib/lmem.h:57:19: 附注：in expansion of macro ‘luaM_reallocv’
             ((v)=cast(t *, luaM_reallocv(L, v, oldn, n, sizeof(t))))
                            ^
         /root/projects/Lualib/lstring.c:93:5: 附注：in expansion of macro ‘luaM_reallocvector’
              luaM_reallocvector(L, tb->hash, tb->size, newsize, TString *);
              ^
         /root/projects/Lualib/lstring.c:93:5: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
         In file included from /root/projects/Lualib/lobject.h:15:0,
                          from /root/projects/Lualib/lstate.h:12,
                          from /root/projects/Lualib/ldebug.h:11,
                          from /root/projects/Lualib/lstring.c:17:
         /root/projects/Lualib/lstring.c: 在函数‘luaS_remove’中:
         /root/projects/Lualib/lobject.h:515:57: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
           (check_exp((size&(size-1))==0, (cast(int, (s) & ((size)-1)))))
                                                                  ^
         /root/projects/Lualib/llimits.h:90:26: 附注：in definition of macro ‘check_exp’
          #define check_exp(c,e)  (e)
                                   ^
         /root/projects/Lualib/lobject.h:515:34: 附注：in expansion of macro ‘cast’
           (check_exp((size&(size-1))==0, (cast(int, (s) & ((size)-1)))))
                                           ^
         /root/projects/Lualib/lstring.c:156:27: 附注：in expansion of macro ‘lmod’
            TString **p = &tb->hash[lmod(ts->hash, tb->size)];
                                    ^
         /root/projects/Lualib/lstring.c: 在函数‘internshrstr’中:
         /root/projects/Lualib/lobject.h:515:57: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
           (check_exp((size&(size-1))==0, (cast(int, (s) & ((size)-1)))))
                                                                  ^
         /root/projects/Lualib/llimits.h:90:26: 附注：in definition of macro ‘check_exp’
          #define check_exp(c,e)  (e)
                                   ^
         /root/projects/Lualib/lobject.h:515:34: 附注：in expansion of macro ‘cast’
           (check_exp((size&(size-1))==0, (cast(int, (s) & ((size)-1)))))
                                           ^
         /root/projects/Lualib/lstring.c:171:34: 附注：in expansion of macro ‘lmod’
            TString **list = &g->strt.hash[lmod(h, g->strt.size)];
                                           ^
         /root/projects/Lualib/lobject.h:515:57: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
           (check_exp((size&(size-1))==0, (cast(int, (s) & ((size)-1)))))
                                                                  ^
         /root/projects/Lualib/llimits.h:90:26: 附注：in definition of macro ‘check_exp’
          #define check_exp(c,e)  (e)
                                   ^
         /root/projects/Lualib/lobject.h:515:34: 附注：in expansion of macro ‘cast’
           (check_exp((size&(size-1))==0, (cast(int, (s) & ((size)-1)))))
                                           ^
         /root/projects/Lualib/lstring.c:184:26: 附注：in expansion of macro ‘lmod’
              list = &g->strt.hash[lmod(h, g->strt.size)];  /* recompute with new size */
                                   ^
         In file included from /root/projects/Lualib/lstate.h:12:0,
                          from /root/projects/Lualib/ldebug.h:11,
                          from /root/projects/Lualib/lstring.c:17:
         /root/projects/Lualib/lstring.c: 在函数‘luaS_newudata’中:
         /root/projects/Lualib/lobject.h:127:23: 警告：‘lu_byte’转换自‘int’时可能改变值 [-Wconversion]
          #define rttype(o) ((o)->tt_)
                                ^
         /root/projects/Lualib/lobject.h:373:40: 附注：in expansion of macro ‘rttype’
             iu->user_ = io->value_; iu->ttuv_ = rttype(io); \
                                                 ^
         /root/projects/Lualib/lstring.c:245:3: 附注：in expansion of macro ‘setuservalue’
            setuservalue(L, u, luaO_nilobject);
            ^
         /root/projects/Lualib/lstrlib.c: 在函数‘str_sub’中:
         /root/projects/Lualib/lstrlib.c:76:3: 警告：‘lua_Integer’转换自‘size_t’时可能会改变结果的符号 [-Wsign-conversion]
            if (end > (lua_Integer)l) end = l;
            ^
         /root/projects/Lualib/lstrlib.c: 在函数‘str_lower’中:
         /root/projects/Lualib/lstrlib.c:103:19: 警告：‘char’转换自‘int’时可能改变值 [-Wconversion]
              p[i] = tolower(uchar(s[i]));
                            ^
         /root/projects/Lualib/lstrlib.c: 在函数‘str_upper’中:
         /root/projects/Lualib/lstrlib.c:116:19: 警告：‘char’转换自‘int’时可能改变值 [-Wconversion]
              p[i] = toupper(uchar(s[i]));
                            ^
         /root/projects/Lualib/lstrlib.c: 在函数‘str_rep’中:
         /root/projects/Lualib/lstrlib.c:128:3: 警告：‘long long unsigned int’转换自‘lua_Integer’时可能会改变结果的符号 [-Wsign-conversion]
            else if (l + lsep < l || l + lsep > MAXSIZE / n)  /* may overflow? */
            ^
         /root/projects/Lualib/lstrlib.c: 在函数‘str_byte’中:
         /root/projects/Lualib/lstrlib.c:155:3: 警告：‘lua_Integer’转换自‘size_t’时可能会改变结果的符号 [-Wsign-conversion]
            if (pose > (lua_Integer)l) pose = l;
            ^
         /root/projects/Lualib/lstrlib.c: 在函数‘str_char’中:
         /root/projects/Lualib/lstrlib.c:171:3: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            char *p = luaL_buffinitsize(L, &b, n);
            ^
         /root/projects/Lualib/lstrlib.c:39:19: 警告：‘char’转换自‘unsigned char’时可能会改变结果的符号 [-Wsign-conversion]
          #define uchar(c) ((unsigned char)(c))
                            ^
         /root/projects/Lualib/lstrlib.c:175:16: 附注：in expansion of macro ‘uchar’
              p[i - 1] = uchar(c);
                         ^
         /root/projects/Lualib/lstrlib.c:177:3: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaL_pushresultsize(&b, n);
            ^
         /root/projects/Lualib/lstrlib.c: 在函数‘start_capture’中:
         /root/projects/Lualib/lstrlib.c:396:20: 警告：‘unsigned char’转换自‘int’时可能改变值 [-Wconversion]
            ms->level = level+1;
                             ^
         /root/projects/Lualib/lstrlib.c: 在函数‘match_capture’中:
         /root/projects/Lualib/lstrlib.c:417:23: 警告：‘size_t’转换自‘ptrdiff_t’时可能会改变结果的符号 [-Wsign-conversion]
            len = ms->capture[l].len;
                                ^
         /root/projects/Lualib/lstrlib.c: 在函数‘lmemfind’中:
         /root/projects/Lualib/lstrlib.c:541:19: 警告：‘long unsigned int’转换自‘long int’时可能会改变结果的符号 [-Wsign-conversion]
                  l1 -= init-s1;
                            ^
         /root/projects/Lualib/lstrlib.c: 在函数‘push_onecapture’中:
         /root/projects/Lualib/lstrlib.c:554:35: 警告：‘size_t’转换自‘long int’时可能会改变结果的符号 [-Wsign-conversion]
                lua_pushlstring(ms->L, s, e - s);  /* add whole match */
                                            ^
         /root/projects/Lualib/lstrlib.c:564:7: 警告：‘size_t’转换自‘ptrdiff_t’时可能会改变结果的符号 [-Wsign-conversion]
                lua_pushlstring(ms->L, ms->capture[i].init, l);
                ^
         /root/projects/Lualib/lstrlib.c: 在函数‘str_find_aux’中:
         /root/projects/Lualib/lstrlib.c:623:30: 警告：‘long unsigned int’转换自‘long int’时可能会改变结果的符号 [-Wsign-conversion]
                lua_pushinteger(L, (s2 - s) + lp);
                                       ^
         /root/projects/Lualib/lstrlib.c:623:35: 警告：‘lua_Integer’转换自‘long unsigned int’时可能会改变结果的符号 [-Wsign-conversion]
                lua_pushinteger(L, (s2 - s) + lp);
                                            ^
         /root/projects/Lualib/lstrlib.c: 在函数‘add_s’中:
         /root/projects/Lualib/lstrlib.c:719:35: 警告：‘size_t’转换自‘long int’时可能会改变结果的符号 [-Wsign-conversion]
                    luaL_addlstring(b, s, e - s);
                                            ^
         /root/projects/Lualib/lstrlib.c: 在函数‘add_value’中:
         /root/projects/Lualib/lstrlib.c:754:29: 警告：‘size_t’转换自‘long int’时可能会改变结果的符号 [-Wsign-conversion]
              lua_pushlstring(L, s, e - s);  /* keep original text */
                                      ^
         /root/projects/Lualib/lstrlib.c: 在函数‘str_gsub’中:
         /root/projects/Lualib/lstrlib.c:768:50: 警告：‘lua_Integer’转换自‘size_t’时可能会改变结果的符号 [-Wsign-conversion]
            lua_Integer max_s = luaL_optinteger(L, 4, srcl + 1);  /* max replacements */
                                                           ^
         /root/projects/Lualib/lstrlib.c:794:38: 警告：‘size_t’转换自‘long int’时可能会改变结果的符号 [-Wsign-conversion]
            luaL_addlstring(&b, src, ms.src_end-src);
                                               ^
         /root/projects/Lualib/lstrlib.c: 在函数‘checkdp’中:
         /root/projects/Lualib/lstrlib.c:935:3: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            if (memchr(buff, '.', nb) == NULL) {  /* no dot? */
            ^
         /root/projects/Lualib/lstrlib.c:937:5: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
              char *ppoint = (char *)memchr(buff, point, nb);
              ^
         /root/projects/Lualib/lstrlib.c: 在函数‘addliteral’中:
         /root/projects/Lualib/lstrlib.c:966:7: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                luaL_addsize(b, nb);
                ^
         /root/projects/Lualib/lstrlib.c: 在函数‘scanformat’中:
         /root/projects/Lualib/lstrlib.c:996:40: 警告：‘long unsigned int’转换自‘long int’时可能会改变结果的符号 [-Wsign-conversion]
            memcpy(form, strfrmt, ((p - strfrmt) + 1) * sizeof(char));
                                                 ^
         /root/projects/Lualib/lstrlib.c: 在函数‘str_format’中:
         /root/projects/Lualib/lstrlib.c:1088:7: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                luaL_addsize(&b, nb);
                ^
         /root/projects/Lualib/lstrlib.c: 在函数‘getdetails’中:
         /root/projects/Lualib/lstrlib.c:1283:51: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
              *ntoalign = (align - (int)(totalsize & (align - 1))) & (align - 1);
                                                            ^
         /root/projects/Lualib/lstrlib.c: 在函数‘packint’中:
         /root/projects/Lualib/lstrlib.c:1297:3: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            char *buff = luaL_prepbuffsize(b, size);
            ^
         /root/projects/Lualib/lstrlib.c:1308:3: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaL_addsize(b, size);  /* add result to buffer */
            ^
         /root/projects/Lualib/lstrlib.c: 在函数‘str_pack’中:
         /root/projects/Lualib/lstrlib.c:1342:27: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
              totalsize += ntoalign + size;
                                    ^
         /root/projects/Lualib/lstrlib.c:1366:9: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                  char *buff = luaL_prepbuffsize(&b, size);
                  ^
         /root/projects/Lualib/lstrlib.c:1373:9: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                  luaL_addsize(&b, size);
                  ^
         /root/projects/Lualib/lstrlib.c: 在函数‘str_packsize’中:
         /root/projects/Lualib/lstrlib.c:1426:5: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
              luaL_argcheck(L, totalsize <= MAXSIZE - size, 1,
              ^
         /root/projects/Lualib/lstrlib.c:1428:5: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
              totalsize += size;
              ^
         /root/projects/Lualib/lstrlib.c: 在函数‘str_unpack’中:
         /root/projects/Lualib/lstrlib.c:1488:5: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
              if ((size_t)ntoalign + size > ~pos || pos + ntoalign + size > ld)
              ^
         /root/projects/Lualib/lstrlib.c:1488:5: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
         /root/projects/Lualib/lstrlib.c:1488:5: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
         /root/projects/Lualib/lstrlib.c:1490:5: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
              pos += ntoalign;  /* skip alignment */
              ^
         /root/projects/Lualib/lstrlib.c:1513:9: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                  lua_pushlstring(L, data + pos, size);
                  ^
         /root/projects/Lualib/lstrlib.c:1518:9: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                  luaL_argcheck(L, pos + len + size <= ld, 2, "data string too short");
                  ^
         /root/projects/Lualib/lstrlib.c:1524:22: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                  size_t len = (int)strlen(data + pos);
                               ^
         /root/projects/Lualib/lstrlib.c:1533:5: 警告：‘size_t’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
              pos += size;
              ^
         /root/projects/Lualib/lstrlib.c:1535:26: 警告：‘lua_Integer’转换自‘size_t’时可能会改变结果的符号 [-Wsign-conversion]
            lua_pushinteger(L, pos + 1);  /* next position */
                                   ^
         In file included from /root/projects/Lualib/ltable.c:38:0:
         /root/projects/Lualib/ltable.c: 在函数‘mainposition’中:
         /root/projects/Lualib/lobject.h:515:57: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
           (check_exp((size&(size-1))==0, (cast(int, (s) & ((size)-1)))))
                                                                  ^
         /root/projects/Lualib/ltable.h:13:32: 附注：in definition of macro ‘gnode’
          #define gnode(t,i) (&(t)->node[i])
                                         ^
         /root/projects/Lualib/lobject.h:515:3: 附注：in expansion of macro ‘check_exp’
           (check_exp((size&(size-1))==0, (cast(int, (s) & ((size)-1)))))
            ^
         /root/projects/Lualib/lobject.h:515:34: 附注：in expansion of macro ‘cast’
           (check_exp((size&(size-1))==0, (cast(int, (s) & ((size)-1)))))
                                           ^
         /root/projects/Lualib/ltable.c:58:34: 附注：in expansion of macro ‘lmod’
          #define hashpow2(t,n)  (gnode(t, lmod((n), sizenode(t))))
                                           ^
         /root/projects/Lualib/ltable.c:60:25: 附注：in expansion of macro ‘hashpow2’
          #define hashstr(t,str)  hashpow2(t, (str)->hash)
                                  ^
         /root/projects/Lualib/ltable.c:124:14: 附注：in expansion of macro ‘hashstr’
                return hashstr(t, tsvalue(key));
                       ^
         /root/projects/Lualib/lobject.h:515:57: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
           (check_exp((size&(size-1))==0, (cast(int, (s) & ((size)-1)))))
                                                                  ^
         /root/projects/Lualib/ltable.h:13:32: 附注：in definition of macro ‘gnode’
          #define gnode(t,i) (&(t)->node[i])
                                         ^
         /root/projects/Lualib/lobject.h:515:3: 附注：in expansion of macro ‘check_exp’
           (check_exp((size&(size-1))==0, (cast(int, (s) & ((size)-1)))))
            ^
         /root/projects/Lualib/lobject.h:515:34: 附注：in expansion of macro ‘cast’
           (check_exp((size&(size-1))==0, (cast(int, (s) & ((size)-1)))))
                                           ^
         /root/projects/Lualib/ltable.c:58:34: 附注：in expansion of macro ‘lmod’
          #define hashpow2(t,n)  (gnode(t, lmod((n), sizenode(t))))
                                           ^
         /root/projects/Lualib/ltable.c:126:14: 附注：in expansion of macro ‘hashpow2’
                return hashpow2(t, luaS_hashlongstr(tsvalue(key)));
                       ^
         /root/projects/Lualib/ltable.c:69:55: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
          #define hashmod(t,n) (gnode(t, ((n) % ((sizenode(t)-1)|1))))
                                                                ^
         /root/projects/Lualib/ltable.h:13:32: 附注：in definition of macro ‘gnode’
          #define gnode(t,i) (&(t)->node[i])
                                         ^
         /root/projects/Lualib/ltable.c:72:26: 附注：in expansion of macro ‘hashmod’
          #define hashpointer(t,p) hashmod(t, point2uint(p))
                                   ^
         /root/projects/Lualib/ltable.c:130:14: 附注：in expansion of macro ‘hashpointer’
                return hashpointer(t, pvalue(key));
                       ^
         /root/projects/Lualib/ltable.c:69:55: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
          #define hashmod(t,n) (gnode(t, ((n) % ((sizenode(t)-1)|1))))
                                                                ^
         /root/projects/Lualib/ltable.h:13:32: 附注：in definition of macro ‘gnode’
          #define gnode(t,i) (&(t)->node[i])
                                         ^
         /root/projects/Lualib/ltable.c:72:26: 附注：in expansion of macro ‘hashmod’
          #define hashpointer(t,p) hashmod(t, point2uint(p))
                                   ^
         /root/projects/Lualib/ltable.c:132:14: 附注：in expansion of macro ‘hashpointer’
                return hashpointer(t, fvalue(key));
                       ^
         /root/projects/Lualib/ltable.c:69:55: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
          #define hashmod(t,n) (gnode(t, ((n) % ((sizenode(t)-1)|1))))
                                                                ^
         /root/projects/Lualib/ltable.h:13:32: 附注：in definition of macro ‘gnode’
          #define gnode(t,i) (&(t)->node[i])
                                         ^
         /root/projects/Lualib/ltable.c:72:26: 附注：in expansion of macro ‘hashmod’
          #define hashpointer(t,p) hashmod(t, point2uint(p))
                                   ^
         /root/projects/Lualib/ltable.c:135:14: 附注：in expansion of macro ‘hashpointer’
                return hashpointer(t, gcvalue(key));
                       ^
         In file included from /root/projects/Lualib/lobject.h:15:0,
                          from /root/projects/Lualib/lstate.h:12,
                          from /root/projects/Lualib/ldebug.h:11,
                          from /root/projects/Lualib/ltable.c:31:
         /root/projects/Lualib/ltable.c: 在函数‘findindex’中:
         /root/projects/Lualib/llimits.h:111:23: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
          #define cast(t, exp) ((t)(exp))
                                ^
         /root/projects/Lualib/llimits.h:116:21: 附注：in expansion of macro ‘cast’
          #define cast_int(i) cast(int, (i))
                              ^
         /root/projects/Lualib/ltable.c:173:13: 附注：in expansion of macro ‘cast_int’
                  i = cast_int(n - gnode(t, 0));  /* key index in hash table */
                      ^
         /root/projects/Lualib/ltable.c: 在函数‘numusehash’中:
         /root/projects/Lualib/ltable.c:296:3: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            *pna += ause;
            ^
         In file included from /root/projects/Lualib/lstate.h:12:0,
                          from /root/projects/Lualib/ldebug.h:11,
                          from /root/projects/Lualib/ltable.c:31:
         /root/projects/Lualib/ltable.c: 在函数‘setnodevector’中:
         /root/projects/Lualib/lobject.h:518:20: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
          #define twoto(x) (1<<(x))
                             ^
         /root/projects/Lualib/ltable.c:321:12: 附注：in expansion of macro ‘twoto’
              size = twoto(lsize);
                     ^
         /root/projects/Lualib/ltable.c: 在函数‘luaH_resizearray’中:
         /root/projects/Lualib/ltable.c:389:3: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaH_resize(L, t, nasize, nsize);
            ^
         /root/projects/Lualib/ltable.c: 在函数‘rehash’中:
         /root/projects/Lualib/ltable.c:403:3: 警告：‘int’转换自‘unsigned int’时可能会改变结果的符号 [-Wsign-conversion]
            totaluse = na;  /* all those keys are integer keys */
            ^
         /root/projects/Lualib/ltable.c:406:17: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            na += countint(ek, nums);
                          ^
         /root/projects/Lualib/ltable.c:411:3: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            luaH_resize(L, t, asize, totaluse - na);
            ^
         In file included from /root/projects/Lualib/ltable.c:38:0:
         /root/projects/Lualib/ltable.c: 在函数‘luaH_getshortstr’中:
         /root/projects/Lualib/lobject.h:515:57: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
           (check_exp((size&(size-1))==0, (cast(int, (s) & ((size)-1)))))
                                                                  ^
         /root/projects/Lualib/ltable.h:13:32: 附注：in definition of macro ‘gnode’
          #define gnode(t,i) (&(t)->node[i])
                                         ^
         /root/projects/Lualib/lobject.h:515:3: 附注：in expansion of macro ‘check_exp’
           (check_exp((size&(size-1))==0, (cast(int, (s) & ((size)-1)))))
            ^
         /root/projects/Lualib/lobject.h:515:34: 附注：in expansion of macro ‘cast’
           (check_exp((size&(size-1))==0, (cast(int, (s) & ((size)-1)))))
                                           ^
         /root/projects/Lualib/ltable.c:58:34: 附注：in expansion of macro ‘lmod’
          #define hashpow2(t,n)  (gnode(t, lmod((n), sizenode(t))))
                                           ^
         /root/projects/Lualib/ltable.c:60:25: 附注：in expansion of macro ‘hashpow2’
          #define hashstr(t,str)  hashpow2(t, (str)->hash)
                                  ^
         /root/projects/Lualib/ltable.c:540:13: 附注：in expansion of macro ‘hashstr’
            Node *n = hashstr(t, key);
                      ^
         /root/projects/Lualib/ltable.c: 在函数‘unbound_search’中:
         /root/projects/Lualib/ltable.c:636:3: 警告：‘lua_Integer’转换自‘lua_Unsigned’时可能会改变结果的符号 [-Wsign-conversion]
            while (!ttisnil(luaH_getint(t, j))) {
            ^
         /root/projects/Lualib/ltable.c:641:7: 警告：‘lua_Integer’转换自‘lua_Unsigned’时可能会改变结果的符号 [-Wsign-conversion]
                while (!ttisnil(luaH_getint(t, i))) i++;
                ^
         /root/projects/Lualib/ltable.c:649:5: 警告：‘lua_Integer’转换自‘lua_Unsigned’时可能会改变结果的符号 [-Wsign-conversion]
              if (ttisnil(luaH_getint(t, m))) j = m;
              ^
         /root/projects/Lualib/ltablib.c: 在函数‘unpack’中:
         /root/projects/Lualib/ltablib.c:212:3: 警告：‘long long unsigned int’转换自‘lua_Integer’时可能会改变结果的符号 [-Wsign-conversion]
            n = (lua_Unsigned)e - i;  /* number of elements minus 1 (avoid overflows) */
            ^
         /root/projects/Lualib/lundump.c: 在函数‘LoadCode’中:
         /root/projects/Lualib/lundump.c:109:3: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            f->code = luaM_newvector(S->L, n, Instruction);
            ^
         /root/projects/Lualib/lundump.c:111:3: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            LoadVector(S, f->code, n);
            ^
         /root/projects/Lualib/lundump.c: 在函数‘LoadConstants’中:
         /root/projects/Lualib/lundump.c:121:3: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            f->k = luaM_newvector(S->L, n, TValue);
            ^
         /root/projects/Lualib/lundump.c: 在函数‘LoadProtos’中:
         /root/projects/Lualib/lundump.c:155:3: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            f->p = luaM_newvector(S->L, n, Proto *);
            ^
         /root/projects/Lualib/lundump.c: 在函数‘LoadUpvalues’中:
         /root/projects/Lualib/lundump.c:169:3: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            f->upvalues = luaM_newvector(S->L, n, Upvaldesc);
            ^
         /root/projects/Lualib/lundump.c: 在函数‘LoadDebug’中:
         /root/projects/Lualib/lundump.c:183:3: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            f->lineinfo = luaM_newvector(S->L, n, int);
            ^
         /root/projects/Lualib/lundump.c:185:3: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            LoadVector(S, f->lineinfo, n);
            ^
         /root/projects/Lualib/lundump.c:187:3: 警告：‘long unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
            f->locvars = luaM_newvector(S->L, n, LocVar);
            ^
         /root/projects/Lualib/lutf8lib.c: 在函数‘utf8_decode’中:
         /root/projects/Lualib/lutf8lib.c:61:3: 警告：‘int’转换自‘unsigned int’时可能会改变结果的符号 [-Wsign-conversion]
            if (val) *val = res;
            ^
         /root/projects/Lualib/lutf8lib.c: 在函数‘byteoffset’中:
         /root/projects/Lualib/lutf8lib.c:164:41: 警告：‘lua_Integer’转换自‘size_t’时可能会改变结果的符号 [-Wsign-conversion]
            lua_Integer posi = (n >= 0) ? 1 : len + 1;
                                                  ^
         In file included from /root/projects/Lualib/lstate.h:12:0,
                          from /root/projects/Lualib/ldebug.h:11,
                          from /root/projects/Lualib/lvm.c:21:
         /root/projects/Lualib/lvm.c: 在函数‘luaV_objlen’中:
         /root/projects/Lualib/lvm.c:524:30: 警告：‘lua_Integer’转换自‘lua_Unsigned’时可能会改变结果的符号 [-Wsign-conversion]
                setivalue(ra, luaH_getn(h));  /* else primitive len */
                                       ^
         /root/projects/Lualib/lobject.h:205:35: 附注：in definition of macro ‘setivalue’
            { TValue *io=(obj); val_(io).i=(x); settt_(io, LUA_TNUMINT); }
                                            ^
         /root/projects/Lualib/lvm.c:532:35: 警告：‘lua_Integer’转换自‘size_t’时可能会改变结果的符号 [-Wsign-conversion]
                setivalue(ra, tsvalue(rb)->u.lnglen);
                                            ^
         /root/projects/Lualib/lobject.h:205:35: 附注：in definition of macro ‘setivalue’
            { TValue *io=(obj); val_(io).i=(x); settt_(io, LUA_TNUMINT); }
                                            ^
         /root/projects/Lualib/lvm.c: 在函数‘luaV_execute’中:
         /root/projects/Lualib/lvm.c:873:40: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                    luaH_resize(L, t, luaO_fb2int(b), luaO_fb2int(c));
                                                 ^
         /root/projects/Lualib/lvm.c:873:56: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                    luaH_resize(L, t, luaO_fb2int(b), luaO_fb2int(c));
                                                                 ^
         /root/projects/Lualib/lvm.c:1274:42: 警告：‘unsigned int’转换自‘int’时可能会改变结果的符号 [-Wsign-conversion]
                  last = ((c-1)*LFIELDS_PER_FLUSH) + n;
                                                   ^
         
       Lib:
         Archiving objects
         Invoking 'ar'
         ar -rsc  "/root/projects/Lualib/bin/x64/Debug/libLualib.a" /root/projects/Lualib/obj/x64/Debug/lapi.o /root/projects/Lualib/obj/x64/Debug/lauxlib.o /root/projects/Lualib/obj/x64/Debug/lbaselib.o /root/projects/Lualib/obj/x64/Debug/lbitlib.o /root/projects/Lualib/obj/x64/Debug/lcode.o /root/projects/Lualib/obj/x64/Debug/lcorolib.o /root/projects/Lualib/obj/x64/Debug/lctype.o /root/projects/Lualib/obj/x64/Debug/ldblib.o /root/projects/Lualib/obj/x64/Debug/ldebug.o /root/projects/Lualib/obj/x64/Debug/ldo.o /root/projects/Lualib/obj/x64/Debug/ldump.o /root/projects/Lualib/obj/x64/Debug/lfunc.o /root/projects/Lualib/obj/x64/Debug/lgc.o /root/projects/Lualib/obj/x64/Debug/linit.o /root/projects/Lualib/obj/x64/Debug/liolib.o /root/projects/Lualib/obj/x64/Debug/llex.o /root/projects/Lualib/obj/x64/Debug/lmathlib.o /root/projects/Lualib/obj/x64/Debug/lmem.o /root/projects/Lualib/obj/x64/Debug/loadlib.o /root/projects/Lualib/obj/x64/Debug/lobject.o /root/projects/Lualib/obj/x64/Debug/lopcodes.o /root/projects/Lualib/obj/x64/Debug/loslib.o /root/projects/Lualib/obj/x64/Debug/lparser.o /root/projects/Lualib/obj/x64/Debug/lstate.o /root/projects/Lualib/obj/x64/Debug/lstring.o /root/projects/Lualib/obj/x64/Debug/lstrlib.o /root/projects/Lualib/obj/x64/Debug/ltable.o /root/projects/Lualib/obj/x64/Debug/ltablib.o /root/projects/Lualib/obj/x64/Debug/ltm.o /root/projects/Lualib/obj/x64/Debug/lundump.o /root/projects/Lualib/obj/x64/Debug/lutf8lib.o /root/projects/Lualib/obj/x64/Debug/lvm.o /root/projects/Lualib/obj/x64/Debug/lzio.o
         Done archiving, output file name: '/root/projects/Lualib/bin/x64/Debug/libLualib.a'
         Copying file '/root/projects/Lualib/bin/x64/Debug/libLualib.a' to 'D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\bin\x64\Debug\libLualib.a'
         Lualib.vcxproj -> D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\bin\x64\Debug\libLualib.a
       FinalizeBuildStatus:
         正在删除文件“D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\obj\x64\Debug\Lualib.tlog\unsuccessfulbuild”。
         正在对“D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\obj\x64\Debug\Lualib.tlog\Lualib.lastbuildstate”执行 Touch 任务。
     1>已完成生成项目“D:\SourceCode\C++\Linux\GameFramework\GameFramework\Lualib\Lualib.vcxproj”(Build 个目标)的操作。

已成功生成。
    0 个警告
    0 个错误

已用时间 00:00:50.96
